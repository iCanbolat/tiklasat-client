/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardProductsIndexImport } from './routes/dashboard/products/index'
import { Route as DashboardOrdersIndexImport } from './routes/dashboard/orders/index'
import { Route as DashboardCategoriesIndexImport } from './routes/dashboard/categories/index'

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProductsIndexRoute = DashboardProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardOrdersIndexRoute = DashboardOrdersIndexImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCategoriesIndexRoute = DashboardCategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/categories/': {
      id: '/dashboard/categories/'
      path: '/categories'
      fullPath: '/dashboard/categories'
      preLoaderRoute: typeof DashboardCategoriesIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/orders/': {
      id: '/dashboard/orders/'
      path: '/orders'
      fullPath: '/dashboard/orders'
      preLoaderRoute: typeof DashboardOrdersIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/products/': {
      id: '/dashboard/products/'
      path: '/products'
      fullPath: '/dashboard/products'
      preLoaderRoute: typeof DashboardProductsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCategoriesIndexRoute: typeof DashboardCategoriesIndexRoute
  DashboardOrdersIndexRoute: typeof DashboardOrdersIndexRoute
  DashboardProductsIndexRoute: typeof DashboardProductsIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCategoriesIndexRoute: DashboardCategoriesIndexRoute,
  DashboardOrdersIndexRoute: DashboardOrdersIndexRoute,
  DashboardProductsIndexRoute: DashboardProductsIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/login': typeof LoginIndexRoute
  '/dashboard/categories': typeof DashboardCategoriesIndexRoute
  '/dashboard/orders': typeof DashboardOrdersIndexRoute
  '/dashboard/products': typeof DashboardProductsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/login': typeof LoginIndexRoute
  '/dashboard/categories': typeof DashboardCategoriesIndexRoute
  '/dashboard/orders': typeof DashboardOrdersIndexRoute
  '/dashboard/products': typeof DashboardProductsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/login/': typeof LoginIndexRoute
  '/dashboard/categories/': typeof DashboardCategoriesIndexRoute
  '/dashboard/orders/': typeof DashboardOrdersIndexRoute
  '/dashboard/products/': typeof DashboardProductsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/login'
    | '/dashboard/categories'
    | '/dashboard/orders'
    | '/dashboard/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/categories'
    | '/dashboard/orders'
    | '/dashboard/products'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/login/'
    | '/dashboard/categories/'
    | '/dashboard/orders/'
    | '/dashboard/products/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/",
        "/dashboard/categories/",
        "/dashboard/orders/",
        "/dashboard/products/"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/dashboard/categories/": {
      "filePath": "dashboard/categories/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/orders/": {
      "filePath": "dashboard/orders/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/products/": {
      "filePath": "dashboard/products/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
